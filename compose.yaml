services:

  frontend:
      build:
        context: ./frontend
      ports:
        - 8080:8080
      # depends_on:
      #   employees:
      #     condition: service_healthy
  employees:
    build:
      context: ./employees
    ports:
      - 8001:8001
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres
    restart: always
    # user: postgres
    secrets:
      - db_password
    volumes:
      - db-data:/var/lib/postgresql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_DB=DEMO
      - POSTGRES_USER=example
      # - POSTGRES_PASSWORD=secret
      - POSTGRES_PASSWORD_FILE=/run/secrets/db_password
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -h localhost -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
volumes:
  db-data:

secrets:
  db_password:
    file: ./db/password.txt

# networks: #required 
#   my-app-network:
#     driver: bridge
